apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'java-library'

project.version = "1.4.2"
project.group = 'com.github.codingchili'

subprojects {
    apply plugin: 'idea'
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'

    version = rootProject.version
    group = rootProject.group

    sourceCompatibility = 18
    targetCompatibility = 18

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    sourceSets {
        main {
            java {
                srcDir 'main/java'
            }
            resources {
                srcDir 'main/resources'
            }
        }
        test {
            java {
                srcDir 'test/java'
            }
            resources {
                srcDir 'test/resources'
            }
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    test {
        testLogging {
            exceptionFormat "full"
        }
        reports.html.required = false
    }
}

task alljavadoc(type: Javadoc) {
    source subprojects.collect { it.sourceSets.main.allJava }
    classpath = files(subprojects.collect { it.sourceSets.main.compileClasspath })
}

task copyJavadoc(type: Copy, dependsOn: alljavadoc) {
    from(javadoc.outputs.files)
    into 'docs/javadoc'
}

task javadocJar(type: Jar, dependsOn: alljavadoc) {
    archiveClassifier = 'javadoc'
    from alljavadoc.destinationDir
}

task testReport(type: TestReport, dependsOn: 'build') {
    destinationDir = file("$buildDir/reports/allTests")
    reportOn subprojects*.test
}

task archiveTestReport(type: Zip, dependsOn: testReport) {
    archiveBaseName = 'testreport'
    from fileTree(file("$buildDir/reports/allTests"))
}

javadoc.dependsOn javadocJar

javadoc {
    options.addBooleanOption('html5', true)
}

artifacts {
    javadocJar
}